let integers = put Integers in
let zero = put Numbers/Zero in
let push_0 = put Push0 in
let push_1 = put Push1 in
let incr = put Incr in
let true = put ../Booleans/True in
let false = put ../Booleans/False in
let pair = put ../Products/Pair in
let b0 = put ../BitSequences/Push0 in
let b1 = put ../BitSequences/Push1 in

'add_pos[integers ^ integers ^ integers]
['add_pos + zero + %i -> %i]
{'add_pos + %i + zero -> %i}
['add_pos + (pair + true + (b0 + %u1)) + (pair + true + (b0 + %u2)) ->
    push_0 + ('add_pos + (pair + true + %u1) + (pair + true + %u2))]
['add_pos + (pair + true + (b0 + %u1)) + (pair + true + (b1 + %u2)) ->
    push_1 + ('add_pos + (pair + true + %u1) + (pair + true + %u2))]
['add_pos + (pair + true + (b1 + %u1)) + (pair + true + (b0 + %u2)) ->
    push_1 + ('add_pos + (pair + true + %u1) + (pair + true + %u2))]
['add_pos + (pair + true + (b1 + %u1)) + (pair + true + (b1 + %u2)) ->
        push_0 + (incr + ('add_pos + (pair + true + %u1) + (pair + true + %u2)))]

